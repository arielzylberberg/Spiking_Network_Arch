MPI_CC=mpic++

CC=g++
#CC=icpc

# compilation options
CFLAGS=-c -O2 -g -Wno-write-strings -D__NO_MPI 
# -gcc-name=/usr/bin/gcc-4.2 -gxx-name=/usr/bin/g++-4.2 
# -isystem/usr/lib/gcc/x86_64-linux-gnu/4.2/include/ 
# -Wall
LDFLAGS=-O2 -lstdc++ -g


SOURCES=main.cpp Network.cpp Population.cpp PopulationDescr.cpp Protocol.cpp Neuron.cpp Event.cpp rando2.cpp Synapse.cpp SynPopDescr.cpp utils.cpp Connection.cpp Receptor.cpp randgen.cpp r250.cpp registrar.cpp rndlcg.cpp
OBJECTS=$(SOURCES:.cpp=.o)

SOURCES_CHECKMEM=main_mem.cpp Network.cpp Population.cpp PopulationDescr.cpp Protocol.cpp Neuron.cpp Event.cpp rando2.cpp Synapse.cpp SynPopDescr.cpp utils.cpp Connection.cpp Receptor.cpp randgen.cpp r250.cpp registrar.cpp rndlcg.cpp
OBJECTS_CHECKMEM=$(SOURCES_CHECKMEM:.cpp=.o)

EXEC=az.out
EXEC_CHECKMEM=checkmem

all: az

az: $(OBJECTS) 
	$(MPI_CC) $(OBJECTS) $(LDFLAGS) -o $(EXEC)

.c.o:;
	$(MPI_CC) -c $<    $(CFLAGS)

.cpp.o:;
	$(MPI_CC) -c $<    $(CFLAGS)

clean:
	@rm -f $(EXEC)
	@rm -f $(EXEC_CHECKMEM)
	@rm -f *.o

no_mpi:
	for source in ${SOURCES}; do \
		$(CC) $(CFLAGS) -D__NO_MPI -c $$source ; \
	done
	$(CC) $(OBJECTS) $(LDFLAGS) -o $(EXEC)

checkmem: $(SOURCES_CHECKMEM)
	for source in ${SOURCES_CHECKMEM}; do \
		$(CC) $(CFLAGS) -D__NO_MPI -DBITS=63 -c $$source ; \
	done
	$(CC) $(OBJECTS_CHECKMEM) $(LDFLAGS) -o $(EXEC_CHECKMEM)
